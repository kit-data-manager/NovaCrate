import { test, expect } from "@playwright/test"

test("Landing Page Tests", async ({ page }) => {
    await page.goto("http://localhost:3000/editor")
    await expect(page.getByText("Your recently used crates")).toBeVisible()
    await page.getByRole("tab", { name: "All Crates" }).click()
    await page
        .getByLabel("All Crates")
        .locator("div")
        .filter({ hasText: "An Error occured while" })
        .nth(1)
        .click()
    await page.getByRole("button", { name: "Import Crate (.zip)" }).click()
    await page.getByTestId("create-upload-input").setInputFiles("tests/data/TestCrate.zip")
    await page.getByRole("menuitem", { name: "Editor" }).click()
    await page.getByRole("menuitem", { name: "Back to Main Menu" }).click()
    await page.getByRole("tab", { name: "All Crates" }).click()
    await expect(page.getByText("TestCrate")).toBeVisible()
    await page.getByRole("tab", { name: "Recent Crates" }).click()
    await expect(page.getByText("TestCrate")).toBeVisible()
    await page.getByLabel("Recent Crates").getByRole("button").filter({ hasText: /^$/ }).click()
    await page.getByRole("menuitem", { name: "Remove from recently used" }).click()
    await expect(page.getByText("Your recently used crates")).toBeVisible()
    await page.getByRole("tab", { name: "All Crates" }).click()
    await expect(page.getByText("TestCrate")).toBeVisible()
    await page.getByLabel("All Crates").getByRole("button").filter({ hasText: /^$/ }).click()
    await page.getByRole("menuitem", { name: "Copy internal Identifier" }).click()
    await page.getByLabel("All Crates").getByRole("button").filter({ hasText: /^$/ }).click()
    await page.getByRole("menuitem", { name: "Permanently Delete" }).click()
    await page.getByRole("button", { name: "Delete" }).click()
    await expect(page.getByText("Your local crates will be")).toBeVisible()
    await page.getByRole("tab", { name: "Recent Crates" }).click()
    await expect(page.getByText("Your recently used crates")).toBeVisible()
})
